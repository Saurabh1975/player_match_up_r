#DPM
dpm <- googlesheets4::read_sheet(ss = "1mhwOLqPu2F9026EQiVxFPIN1t9RGafGpl-dokaIsm9c",
                                 sheet = "Current DPM Ranks") %>% data.frame()


dpm %<>% dplyr::rename(PLAYER_ID = NBA.ID)
dpm2 <- dpm %>% dplyr::select(-Position)


playoffadjustments <- googlesheets4::read_sheet(ss = "1BbG3ExeXtdv7xaJ17UFYCLgfrZMykYwAX8Lwhp5cHAc",
                                                sheet = "Sheet1") %>% data.frame()


dpm3 <- full_join(dpm2,playoffadjustments,by=c("PLAYER_ID"="nba_id"))
dpm3 %<>% rename(DARKO = DPM)
dpm3 %<>% mutate(ODPM = Offensive.DPM+Offensive.Adjustment, 
                 DDPM = Defensive.DPM+Defensive.Adjustment,
                 DPM = DARKO+Net.Adjustment)
dpm4 <- dpm3 %>% 
  dplyr::select(PLAYER_ID,DPM, ODPM, DDPM)
ovrdpm <- left_join(ovr3,dpm4,by="PLAYER_ID")
ovrdpm %<>% rename(MIN = Mins)

team_ratings_dpm <- ovrdpm %>% 
  mutate(o_value = MIN * ODPM) %>% 
  mutate(d_value = MIN * DDPM) %>%
  group_by(TEAM_ID,TEAM_ABBREVIATION) %>% 
  summarise(team_o_value = sum(o_value),
            team_d_value = sum(d_value),
            team_minutes = sum(MIN)) %>% 
  mutate(ortg = (team_o_value/team_minutes) * 5,
         drtg = (team_d_value/team_minutes) * 5,
         nrtg = ortg + drtg) %>% 
  mutate(across(where(is.numeric), function(x) round(x, 3))) %>% 
  data.frame()
teamratingsdpm <- team_ratings_dpm %>% dplyr::select(1,2,5,ortg:nrtg) %>% arrange(desc(nrtg))

#Merge with Schedule
schedule_with_ratings <- teamschedule %>% 
  left_join(teamratingsdpm, by = c("home_team" = "TEAM_ABBREVIATION")) %>% 
  left_join(teamratingsdpm, by = c("away_team" = "TEAM_ABBREVIATION"), suffix = c("_home", "_away")) 

#Win Probabilities
hca <- 1.5 ## THIS IS DIFFERENT FOR COVID SEASONS
schedule_with_ratings %<>% 
  mutate(delta = nrtg_home - nrtg_away + hca)

coef1 <- 0.1483737284
coef2 <- 0.4257284470

schedule_with_ratings %<>% 
  mutate(home_win_prob = 1/(1 + exp(-(coef2 + coef1 * delta)))) %>%
  mutate(away_win_prob = 1 - home_win_prob)

#Kostya's formula
team_rating_value = 0.171809153
hca_value = 0.455115688737491
pace = 100
schedule_with_ratings %<>% 
  mutate(home_win_odds = 1/(1+exp(-(hca_value+team_rating_value*(nrtg_home-nrtg_away)*pace/100)))) %>%
  mutate(away_win_odds = 1 - home_win_odds)

team_rating_value = 0.171809153
hca_value = 1.5
pace = 100
schedule_with_ratings %<>% 
  mutate(home_win_odds = 1/(1+exp(-(team_rating_value*(nrtg_home-nrtg_away+hca_value)*pace/100)))) %>%
  mutate(away_win_odds = 1 - home_win_odds)

team_probH <- schedule_with_ratings %>%
  dplyr::select(GameNum,Round,Conf,team = home_team, opp = away_team, team_win_prob = home_win_odds,
                team_seed = home_team_seed, opp_seed = away_team_seed)
team_probA <- schedule_with_ratings %>%
  dplyr::select(GameNum,Round,Conf,team = away_team, opp = home_team, team_win_prob = away_win_odds,
                team_seed = away_team_seed, opp_seed = home_team_seed)
team_prob <- rbind(team_probH,team_probA)
team_prob %<>% arrange(Conf,team_seed,GameNum)
team_prob %<>% mutate(team_lose_prob = 1 - team_win_prob)

teamprobH <- distinct(team_probH,Conf,team,opp,team_seed,team_win_prob) %>%
  arrange(Conf,team_seed) %>% rename(team_win_prob_home = team_win_prob)
teamprobA <- distinct(team_probA,Conf,team,opp,team_seed,team_win_prob) %>%
  arrange(Conf,team_seed) %>% rename(team_win_prob_away = team_win_prob)
teamprobF <- full_join(teamprobH,teamprobA,by=c("Conf","team","opp","team_seed"))
seriesprojections <- data.frame()
seriesoutcome2 <- data.frame()

k = 1
stime <- Sys.time()
teamwinprobhome <- teamprobF[k,4]
teamwinprobaway <- teamprobF[k,6] 
teamname <- teamprobF[k,2]
oppname <- teamprobF[k,3]
sims = 100000
series <- data.frame()
for(i in 1:sims){
  G1 <- 1
  G2 <- 1
  G3 <- ifelse(runif(1) < teamwinprobaway,1,0)
  G4 <- ifelse(runif(1) < teamwinprobaway,1,0)
  teamwin = G1+G2+G3+G4
  teamloss = 4 - (G1+G2+G3+G4)
  if(teamwin == 4 | teamloss == 4){
    teamrec <- data.frame(wins=teamwin,loss=teamloss)
    series <- rbind(teamrec,series)
  } else{
    G5 <- ifelse(runif(1) < teamwinprobhome,1,0)
    teamwin = G1+G2+G3+G4+G5
    teamloss = 5 - (G1+G2+G3+G4+G5)
    if(teamwin == 4 | teamloss == 4){
      teamrec <- data.frame(wins=teamwin,loss=teamloss)
      series <- rbind(teamrec,series)
    } else{
      G6 <- ifelse(runif(1) < teamwinprobaway,1,0)
      teamwin = G1+G2+G3+G4+G5+G6
      teamloss = 6 - (G1+G2+G3+G4+G5+G6)
      if(teamwin == 4 | teamloss == 4){
        teamrec <- data.frame(wins=teamwin,loss=teamloss)
        series <- rbind(teamrec,series)
      } else{
        G7 <- ifelse(runif(1) < teamwinprobhome,1,0)
        teamwin = G1+G2+G3+G4+G5+G6+G7
        teamloss = 7 - (G1+G2+G3+G4+G5+G6+G7)
        teamrec <- data.frame(wins=teamwin,loss=teamloss)
        series <- rbind(teamrec,series)
      }
    }
  }
}
series %<>% mutate(games = wins+loss)
series %<>% mutate(SeriesWin = ifelse(wins == 4,"Win","Loss"))
series2 <- series %>% group_by(SeriesWin,games) %>%
  summarise(count = n()) %>% 
  mutate(Pct = count/sims) %>% data.frame()
series2$team <- teamname
series2 %<>% dplyr::select(team,everything())
series2 %<>% mutate(Outcome = paste(team,SeriesWin,"in",games,sep=" "))
seriesoutcome <- series2 %>% group_by(team,SeriesWin) %>% 
  summarise(Pct = sum(Pct)) %>% data.frame

#ifelse(runif(1) < teamwinprobhome,1,0)
#ifelse(runif(1) < teamwinprobaway,1,0)
#ifelse(runif(1) < teamwinprobaway,1,0)

library(tidyverse)
library(gt)
library(scales)

midseriesdpm <- series2
midseriesoutcomedpm <- seriesoutcome
df <- filter(midseriesdpm, team == "PHX")
seriesPct <- filter(midseriesoutcomedpm, team == "PHX")
df$Outcome <- gsub("PHX Loss","MIL Win",df$Outcome)
df$team <- ifelse(df$SeriesWin == "Loss","MIL","PHX")
df$SeriesWin <- gsub("Loss","Win",df$SeriesWin)

df %>% 
  group_by(team) %>%
  mutate(seriesPct = sum(Pct), 
         team = case_when(
           team == "PHX"  ~ paste0("PHX - ", percent(max(seriesPct)), " Overall Series Win Chance"),
           TRUE ~ paste0("MIL - ", percent(min(seriesPct)), " Overall Series Win Chance"),
         )) %>%
  dplyr::select(Outcome, Pct) %>% 
  arrange(desc(Pct)) %>%
  gt() %>% 
  tab_header(
    title = md("**Playoff Outcome Probability**"), 
    subtitle = "Based on DARKO player ratings & crowdsourced playoff rotations"
  ) %>% 
  cols_label(Pct = "Probability")%>% 
  fmt_percent(
    columns = vars(Pct), 
    decimals = 1
  ) %>% 
  data_color(
    columns = vars(Pct),
    colors = scales::col_numeric(
      palette = paletteer::paletteer_d(
        palette = "Redmonder::dPBIRdGn",
        direction = 1
      ) %>% as.character(),
      domain = NULL, 
      na.color = "#005C55FF"
    )
  ) %>% 
  tab_options(
    row_group.font.weight = 'bold'
  ) 
