distinct(GAME_ID, .keep_all = TRUE) %>%
group_by(MATCHUP) %>%
arrange(MATCHUP,GAME_DATE) %>%
mutate(game_number = paste0("Game ", row_number())) %>%
ungroup() %>%
arrange(MATCHUP) %>%
mutate(version = format(Sys.time(), "%a %b %d %X"))
saveRDS(gamelog, "gamelog.rds")
library(hoopR)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(stringr)
library(png)
library(ggimage)
library(magick)
library(ggtext)
library(extrafont)
library(forcats)
loadfonts(device="win")
pull_matchup_box <- function(game_id){
print(game_id)
pull_df <- rbind(nba_boxscorematchupsv3(game_id = game_id)[[1]], nba_boxscorematchupsv3(game_id = game_id)[[2]])
Sys.sleep(3)
df <- pull_df %>%
rename(OFF_PLAYER_ID = person_id, DEF_PLAYER_ID = matchups_person_id) %>%
mutate(OFF_PLAYER_NAME = paste0(first_name, " " , family_name),
DEF_PLAYER_NAME = paste0(matchups_first_name, " " , matchups_family_name),
MATCHUP_MIN = matchup_minutes_sort/60,
off_team_id = team_id,
def_team_id = ifelse(team_id == home_team_id, away_team_id, home_team_id)) %>%
select(game_id, off_team_id, OFF_PLAYER_ID, OFF_PLAYER_NAME,
def_team_id, DEF_PLAYER_ID, DEF_PLAYER_NAME,
MATCHUP_MIN)
return(df)
}
#Get List of Playoff Games
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
select(GAME_ID, GAME_DATE)
#Get Matchup Dataframe
raw_matchup_df <- do.call(rbind, lapply(unique(gamelog$GAME_ID), pull_matchup_box))
#Join in helper columns
team_colors <- read.csv('C:/Users/saurabh.rane/OneDrive - Slalom/NBA/data_update_scripts/Data/teamColors.csv') %>%
select(TEAM_ID, TEAM_NAME, TEAM_ABBREVIATION, Primary.Color)
matchup_df <- raw_matchup_df %>%
left_join(team_colors, by = c('off_team_id' = 'TEAM_ID')) %>%
left_join(team_colors, by = c('def_team_id' = 'TEAM_ID')) %>%
rename(off_team_abv = TEAM_ABBREVIATION.x, off_team_name = TEAM_NAME.x, off_team_color = Primary.Color.x,
def_team_abv = TEAM_ABBREVIATION.y, def_team_name = TEAM_NAME.y, def_team_color = Primary.Color.y) %>%
mutate(OFF_PLAYER_NAME = str_replace_all(OFF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""),
DEF_PLAYER_NAME = str_replace_all(DEF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""))
saveRDS(matchup_df, "matchups.rds")
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
mutate(MATCHUP = str_replace_all(MATCHUP, c("@" = "vs.")))  %>%
select(GAME_ID, GAME_DATE, MATCHUP) %>%
group_by(GAME_ID) %>%
mutate(MATCHUP = max(MATCHUP)) %>%
ungroup() %>%
distinct(GAME_ID, .keep_all = TRUE) %>%
group_by(MATCHUP) %>%
arrange(MATCHUP,GAME_DATE) %>%
mutate(game_number = paste0("Game ", row_number())) %>%
ungroup() %>%
arrange(MATCHUP) %>%
mutate(version = format(Sys.time(), "%a %b %d %X"))
saveRDS(gamelog, "gamelog.rds")
library(hoopR)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(stringr)
library(png)
library(ggimage)
library(magick)
library(ggtext)
library(extrafont)
library(forcats)
loadfonts(device="win")
pull_matchup_box <- function(game_id){
print(game_id)
pull_df <- rbind(nba_boxscorematchupsv3(game_id = game_id)[[1]], nba_boxscorematchupsv3(game_id = game_id)[[2]])
Sys.sleep(3)
df <- pull_df %>%
rename(OFF_PLAYER_ID = person_id, DEF_PLAYER_ID = matchups_person_id) %>%
mutate(OFF_PLAYER_NAME = paste0(first_name, " " , family_name),
DEF_PLAYER_NAME = paste0(matchups_first_name, " " , matchups_family_name),
MATCHUP_MIN = matchup_minutes_sort/60,
off_team_id = team_id,
def_team_id = ifelse(team_id == home_team_id, away_team_id, home_team_id)) %>%
select(game_id, off_team_id, OFF_PLAYER_ID, OFF_PLAYER_NAME,
def_team_id, DEF_PLAYER_ID, DEF_PLAYER_NAME,
MATCHUP_MIN)
return(df)
}
#Get List of Playoff Games
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
select(GAME_ID, GAME_DATE)
#Get Matchup Dataframe
raw_matchup_df <- do.call(rbind, lapply(unique(gamelog$GAME_ID), pull_matchup_box))
#Join in helper columns
team_colors <- read.csv('C:/Users/saurabh.rane/OneDrive - Slalom/NBA/data_update_scripts/Data/teamColors.csv') %>%
select(TEAM_ID, TEAM_NAME, TEAM_ABBREVIATION, Primary.Color)
matchup_df <- raw_matchup_df %>%
left_join(team_colors, by = c('off_team_id' = 'TEAM_ID')) %>%
left_join(team_colors, by = c('def_team_id' = 'TEAM_ID')) %>%
rename(off_team_abv = TEAM_ABBREVIATION.x, off_team_name = TEAM_NAME.x, off_team_color = Primary.Color.x,
def_team_abv = TEAM_ABBREVIATION.y, def_team_name = TEAM_NAME.y, def_team_color = Primary.Color.y) %>%
mutate(OFF_PLAYER_NAME = str_replace_all(OFF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""),
DEF_PLAYER_NAME = str_replace_all(DEF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""))
saveRDS(matchup_df, "matchups.rds")
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
mutate(MATCHUP = str_replace_all(MATCHUP, c("@" = "vs.")))  %>%
select(GAME_ID, GAME_DATE, MATCHUP) %>%
group_by(GAME_ID) %>%
mutate(MATCHUP = max(MATCHUP)) %>%
ungroup() %>%
distinct(GAME_ID, .keep_all = TRUE) %>%
group_by(MATCHUP) %>%
arrange(MATCHUP,GAME_DATE) %>%
mutate(game_number = paste0("Game ", row_number())) %>%
ungroup() %>%
arrange(MATCHUP) %>%
mutate(version = format(Sys.time(), "%a %b %d %X"))
saveRDS(gamelog, "gamelog.rds")
library(hoopR)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(stringr)
library(png)
library(ggimage)
library(magick)
library(ggtext)
library(extrafont)
library(forcats)
loadfonts(device="win")
pull_matchup_box <- function(game_id){
print(game_id)
pull_df <- rbind(nba_boxscorematchupsv3(game_id = game_id)[[1]], nba_boxscorematchupsv3(game_id = game_id)[[2]])
Sys.sleep(3)
df <- pull_df %>%
rename(OFF_PLAYER_ID = person_id, DEF_PLAYER_ID = matchups_person_id) %>%
mutate(OFF_PLAYER_NAME = paste0(first_name, " " , family_name),
DEF_PLAYER_NAME = paste0(matchups_first_name, " " , matchups_family_name),
MATCHUP_MIN = matchup_minutes_sort/60,
off_team_id = team_id,
def_team_id = ifelse(team_id == home_team_id, away_team_id, home_team_id)) %>%
select(game_id, off_team_id, OFF_PLAYER_ID, OFF_PLAYER_NAME,
def_team_id, DEF_PLAYER_ID, DEF_PLAYER_NAME,
MATCHUP_MIN)
return(df)
}
#Get List of Playoff Games
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
select(GAME_ID, GAME_DATE)
#Get Matchup Dataframe
raw_matchup_df <- do.call(rbind, lapply(unique(gamelog$GAME_ID), pull_matchup_box))
#Join in helper columns
team_colors <- read.csv('C:/Users/saurabh.rane/OneDrive - Slalom/NBA/data_update_scripts/Data/teamColors.csv') %>%
select(TEAM_ID, TEAM_NAME, TEAM_ABBREVIATION, Primary.Color)
matchup_df <- raw_matchup_df %>%
left_join(team_colors, by = c('off_team_id' = 'TEAM_ID')) %>%
left_join(team_colors, by = c('def_team_id' = 'TEAM_ID')) %>%
rename(off_team_abv = TEAM_ABBREVIATION.x, off_team_name = TEAM_NAME.x, off_team_color = Primary.Color.x,
def_team_abv = TEAM_ABBREVIATION.y, def_team_name = TEAM_NAME.y, def_team_color = Primary.Color.y) %>%
mutate(OFF_PLAYER_NAME = str_replace_all(OFF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""),
DEF_PLAYER_NAME = str_replace_all(DEF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""))
saveRDS(matchup_df, "matchups.rds")
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
mutate(MATCHUP = str_replace_all(MATCHUP, c("@" = "vs.")))  %>%
select(GAME_ID, GAME_DATE, MATCHUP) %>%
group_by(GAME_ID) %>%
mutate(MATCHUP = max(MATCHUP)) %>%
ungroup() %>%
distinct(GAME_ID, .keep_all = TRUE) %>%
group_by(MATCHUP) %>%
arrange(MATCHUP,GAME_DATE) %>%
mutate(game_number = paste0("Game ", row_number())) %>%
ungroup() %>%
arrange(MATCHUP) %>%
mutate(version = format(Sys.time(), "%a %b %d %X"))
saveRDS(gamelog, "gamelog.rds")
library(hoopR)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(stringr)
library(png)
library(ggimage)
library(magick)
library(ggtext)
library(extrafont)
library(forcats)
loadfonts(device="win")
pull_matchup_box <- function(game_id){
print(game_id)
pull_df <- rbind(nba_boxscorematchupsv3(game_id = game_id)[[1]], nba_boxscorematchupsv3(game_id = game_id)[[2]])
Sys.sleep(3)
df <- pull_df %>%
rename(OFF_PLAYER_ID = person_id, DEF_PLAYER_ID = matchups_person_id) %>%
mutate(OFF_PLAYER_NAME = paste0(first_name, " " , family_name),
DEF_PLAYER_NAME = paste0(matchups_first_name, " " , matchups_family_name),
MATCHUP_MIN = matchup_minutes_sort/60,
off_team_id = team_id,
def_team_id = ifelse(team_id == home_team_id, away_team_id, home_team_id)) %>%
select(game_id, off_team_id, OFF_PLAYER_ID, OFF_PLAYER_NAME,
def_team_id, DEF_PLAYER_ID, DEF_PLAYER_NAME,
MATCHUP_MIN)
return(df)
}
#Get List of Playoff Games
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
select(GAME_ID, GAME_DATE)
#Get Matchup Dataframe
raw_matchup_df <- do.call(rbind, lapply(unique(gamelog$GAME_ID), pull_matchup_box))
#Join in helper columns
team_colors <- read.csv('C:/Users/saurabh.rane/OneDrive - Slalom/NBA/data_update_scripts/Data/teamColors.csv') %>%
select(TEAM_ID, TEAM_NAME, TEAM_ABBREVIATION, Primary.Color)
matchup_df <- raw_matchup_df %>%
left_join(team_colors, by = c('off_team_id' = 'TEAM_ID')) %>%
left_join(team_colors, by = c('def_team_id' = 'TEAM_ID')) %>%
rename(off_team_abv = TEAM_ABBREVIATION.x, off_team_name = TEAM_NAME.x, off_team_color = Primary.Color.x,
def_team_abv = TEAM_ABBREVIATION.y, def_team_name = TEAM_NAME.y, def_team_color = Primary.Color.y) %>%
mutate(OFF_PLAYER_NAME = str_replace_all(OFF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""),
DEF_PLAYER_NAME = str_replace_all(DEF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""))
saveRDS(matchup_df, "matchups.rds")
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
mutate(MATCHUP = str_replace_all(MATCHUP, c("@" = "vs.")))  %>%
select(GAME_ID, GAME_DATE, MATCHUP) %>%
group_by(GAME_ID) %>%
mutate(MATCHUP = max(MATCHUP)) %>%
ungroup() %>%
distinct(GAME_ID, .keep_all = TRUE) %>%
group_by(MATCHUP) %>%
arrange(MATCHUP,GAME_DATE) %>%
mutate(game_number = paste0("Game ", row_number())) %>%
ungroup() %>%
arrange(MATCHUP) %>%
mutate(version = format(Sys.time(), "%a %b %d %X"))
saveRDS(gamelog, "gamelog.rds")
library(hoopR)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(stringr)
library(png)
library(ggimage)
library(magick)
library(ggtext)
library(extrafont)
library(forcats)
loadfonts(device="win")
pull_matchup_box <- function(game_id){
print(game_id)
pull_df <- rbind(nba_boxscorematchupsv3(game_id = game_id)[[1]], nba_boxscorematchupsv3(game_id = game_id)[[2]])
Sys.sleep(3)
df <- pull_df %>%
rename(OFF_PLAYER_ID = person_id, DEF_PLAYER_ID = matchups_person_id) %>%
mutate(OFF_PLAYER_NAME = paste0(first_name, " " , family_name),
DEF_PLAYER_NAME = paste0(matchups_first_name, " " , matchups_family_name),
MATCHUP_MIN = matchup_minutes_sort/60,
off_team_id = team_id,
def_team_id = ifelse(team_id == home_team_id, away_team_id, home_team_id)) %>%
select(game_id, off_team_id, OFF_PLAYER_ID, OFF_PLAYER_NAME,
def_team_id, DEF_PLAYER_ID, DEF_PLAYER_NAME,
MATCHUP_MIN)
return(df)
}
#Get List of Playoff Games
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
select(GAME_ID, GAME_DATE)
#Get Matchup Dataframe
raw_matchup_df <- do.call(rbind, lapply(unique(gamelog$GAME_ID), pull_matchup_box))
#Join in helper columns
team_colors <- read.csv('C:/Users/saurabh.rane/OneDrive - Slalom/NBA/data_update_scripts/Data/teamColors.csv') %>%
select(TEAM_ID, TEAM_NAME, TEAM_ABBREVIATION, Primary.Color)
matchup_df <- raw_matchup_df %>%
left_join(team_colors, by = c('off_team_id' = 'TEAM_ID')) %>%
left_join(team_colors, by = c('def_team_id' = 'TEAM_ID')) %>%
rename(off_team_abv = TEAM_ABBREVIATION.x, off_team_name = TEAM_NAME.x, off_team_color = Primary.Color.x,
def_team_abv = TEAM_ABBREVIATION.y, def_team_name = TEAM_NAME.y, def_team_color = Primary.Color.y) %>%
mutate(OFF_PLAYER_NAME = str_replace_all(OFF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""),
DEF_PLAYER_NAME = str_replace_all(DEF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""))
saveRDS(matchup_df, "matchups.rds")
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
mutate(MATCHUP = str_replace_all(MATCHUP, c("@" = "vs.")))  %>%
select(GAME_ID, GAME_DATE, MATCHUP) %>%
group_by(GAME_ID) %>%
mutate(MATCHUP = max(MATCHUP)) %>%
ungroup() %>%
distinct(GAME_ID, .keep_all = TRUE) %>%
group_by(MATCHUP) %>%
arrange(MATCHUP,GAME_DATE) %>%
mutate(game_number = paste0("Game ", row_number())) %>%
ungroup() %>%
arrange(MATCHUP) %>%
mutate(version = format(Sys.time(), "%a %b %d %X"))
saveRDS(gamelog, "gamelog.rds")
library(hoopR)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(stringr)
library(png)
library(ggimage)
library(magick)
library(ggtext)
library(extrafont)
library(forcats)
loadfonts(device="win")
pull_matchup_box <- function(game_id){
print(game_id)
pull_df <- rbind(nba_boxscorematchupsv3(game_id = game_id)[[1]], nba_boxscorematchupsv3(game_id = game_id)[[2]])
Sys.sleep(3)
df <- pull_df %>%
rename(OFF_PLAYER_ID = person_id, DEF_PLAYER_ID = matchups_person_id) %>%
mutate(OFF_PLAYER_NAME = paste0(first_name, " " , family_name),
DEF_PLAYER_NAME = paste0(matchups_first_name, " " , matchups_family_name),
MATCHUP_MIN = matchup_minutes_sort/60,
off_team_id = team_id,
def_team_id = ifelse(team_id == home_team_id, away_team_id, home_team_id)) %>%
select(game_id, off_team_id, OFF_PLAYER_ID, OFF_PLAYER_NAME,
def_team_id, DEF_PLAYER_ID, DEF_PLAYER_NAME,
MATCHUP_MIN)
return(df)
}
#Get List of Playoff Games
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
select(GAME_ID, GAME_DATE)
#Get Matchup Dataframe
raw_matchup_df <- do.call(rbind, lapply(unique(gamelog$GAME_ID), pull_matchup_box))
#Join in helper columns
team_colors <- read.csv('C:/Users/saurabh.rane/OneDrive - Slalom/NBA/data_update_scripts/Data/teamColors.csv') %>%
select(TEAM_ID, TEAM_NAME, TEAM_ABBREVIATION, Primary.Color)
matchup_df <- raw_matchup_df %>%
left_join(team_colors, by = c('off_team_id' = 'TEAM_ID')) %>%
left_join(team_colors, by = c('def_team_id' = 'TEAM_ID')) %>%
rename(off_team_abv = TEAM_ABBREVIATION.x, off_team_name = TEAM_NAME.x, off_team_color = Primary.Color.x,
def_team_abv = TEAM_ABBREVIATION.y, def_team_name = TEAM_NAME.y, def_team_color = Primary.Color.y) %>%
mutate(OFF_PLAYER_NAME = str_replace_all(OFF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""),
DEF_PLAYER_NAME = str_replace_all(DEF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""))
saveRDS(matchup_df, "matchups.rds")
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
mutate(MATCHUP = str_replace_all(MATCHUP, c("@" = "vs.")))  %>%
select(GAME_ID, GAME_DATE, MATCHUP) %>%
group_by(GAME_ID) %>%
mutate(MATCHUP = max(MATCHUP)) %>%
ungroup() %>%
distinct(GAME_ID, .keep_all = TRUE) %>%
group_by(MATCHUP) %>%
arrange(MATCHUP,GAME_DATE) %>%
mutate(game_number = paste0("Game ", row_number())) %>%
ungroup() %>%
arrange(MATCHUP) %>%
mutate(version = format(Sys.time(), "%a %b %d %X"))
saveRDS(gamelog, "gamelog.rds")
library(hoopR)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(stringr)
library(png)
library(ggimage)
library(magick)
library(ggtext)
library(extrafont)
library(forcats)
loadfonts(device="win")
pull_matchup_box <- function(game_id){
print(game_id)
pull_df <- rbind(nba_boxscorematchupsv3(game_id = game_id)[[1]], nba_boxscorematchupsv3(game_id = game_id)[[2]])
Sys.sleep(3)
df <- pull_df %>%
rename(OFF_PLAYER_ID = person_id, DEF_PLAYER_ID = matchups_person_id) %>%
mutate(OFF_PLAYER_NAME = paste0(first_name, " " , family_name),
DEF_PLAYER_NAME = paste0(matchups_first_name, " " , matchups_family_name),
MATCHUP_MIN = matchup_minutes_sort/60,
off_team_id = team_id,
def_team_id = ifelse(team_id == home_team_id, away_team_id, home_team_id)) %>%
select(game_id, off_team_id, OFF_PLAYER_ID, OFF_PLAYER_NAME,
def_team_id, DEF_PLAYER_ID, DEF_PLAYER_NAME,
MATCHUP_MIN)
return(df)
}
#Get List of Playoff Games
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
select(GAME_ID, GAME_DATE)
#Get Matchup Dataframe
raw_matchup_df <- do.call(rbind, lapply(unique(gamelog$GAME_ID), pull_matchup_box))
#Join in helper columns
team_colors <- read.csv('C:/Users/saurabh.rane/OneDrive - Slalom/NBA/data_update_scripts/Data/teamColors.csv') %>%
select(TEAM_ID, TEAM_NAME, TEAM_ABBREVIATION, Primary.Color)
matchup_df <- raw_matchup_df %>%
left_join(team_colors, by = c('off_team_id' = 'TEAM_ID')) %>%
left_join(team_colors, by = c('def_team_id' = 'TEAM_ID')) %>%
rename(off_team_abv = TEAM_ABBREVIATION.x, off_team_name = TEAM_NAME.x, off_team_color = Primary.Color.x,
def_team_abv = TEAM_ABBREVIATION.y, def_team_name = TEAM_NAME.y, def_team_color = Primary.Color.y) %>%
mutate(OFF_PLAYER_NAME = str_replace_all(OFF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""),
DEF_PLAYER_NAME = str_replace_all(DEF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""))
saveRDS(matchup_df, "matchups.rds")
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
mutate(MATCHUP = str_replace_all(MATCHUP, c("@" = "vs.")))  %>%
select(GAME_ID, GAME_DATE, MATCHUP) %>%
group_by(GAME_ID) %>%
mutate(MATCHUP = max(MATCHUP)) %>%
ungroup() %>%
distinct(GAME_ID, .keep_all = TRUE) %>%
group_by(MATCHUP) %>%
arrange(MATCHUP,GAME_DATE) %>%
mutate(game_number = paste0("Game ", row_number())) %>%
ungroup() %>%
arrange(MATCHUP) %>%
mutate(version = format(Sys.time(), "%a %b %d %X"))
saveRDS(gamelog, "gamelog.rds")
library(hoopR)
library(dplyr)
library(tidyr)
library(ggplot2)
library(gganimate)
library(stringr)
library(png)
library(ggimage)
library(magick)
library(ggtext)
library(extrafont)
library(forcats)
loadfonts(device="win")
pull_matchup_box <- function(game_id){
print(game_id)
pull_df <- rbind(nba_boxscorematchupsv3(game_id = game_id)[[1]], nba_boxscorematchupsv3(game_id = game_id)[[2]])
Sys.sleep(3)
df <- pull_df %>%
rename(OFF_PLAYER_ID = person_id, DEF_PLAYER_ID = matchups_person_id) %>%
mutate(OFF_PLAYER_NAME = paste0(first_name, " " , family_name),
DEF_PLAYER_NAME = paste0(matchups_first_name, " " , matchups_family_name),
MATCHUP_MIN = matchup_minutes_sort/60,
off_team_id = team_id,
def_team_id = ifelse(team_id == home_team_id, away_team_id, home_team_id)) %>%
select(game_id, off_team_id, OFF_PLAYER_ID, OFF_PLAYER_NAME,
def_team_id, DEF_PLAYER_ID, DEF_PLAYER_NAME,
MATCHUP_MIN)
return(df)
}
#Get List of Playoff Games
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
select(GAME_ID, GAME_DATE)
#Get Matchup Dataframe
raw_matchup_df <- do.call(rbind, lapply(unique(gamelog$GAME_ID), pull_matchup_box))
#Join in helper columns
team_colors <- read.csv('C:/Users/saurabh.rane/OneDrive - Slalom/NBA/data_update_scripts/Data/teamColors.csv') %>%
select(TEAM_ID, TEAM_NAME, TEAM_ABBREVIATION, Primary.Color)
matchup_df <- raw_matchup_df %>%
left_join(team_colors, by = c('off_team_id' = 'TEAM_ID')) %>%
left_join(team_colors, by = c('def_team_id' = 'TEAM_ID')) %>%
rename(off_team_abv = TEAM_ABBREVIATION.x, off_team_name = TEAM_NAME.x, off_team_color = Primary.Color.x,
def_team_abv = TEAM_ABBREVIATION.y, def_team_name = TEAM_NAME.y, def_team_color = Primary.Color.y) %>%
mutate(OFF_PLAYER_NAME = str_replace_all(OFF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""),
DEF_PLAYER_NAME = str_replace_all(DEF_PLAYER_NAME, "[^[:alnum:][:space:]]", ""))
saveRDS(matchup_df, "matchups.rds")
gamelog <-  nba_leaguegamelog(league_id = '00', season = year_to_season(most_recent_nba_season() - 1),
season_type = 'Playoffs')[[1]] %>%
filter(!is.na(WL)) %>%
mutate(MATCHUP = str_replace_all(MATCHUP, c("@" = "vs.")))  %>%
select(GAME_ID, GAME_DATE, MATCHUP) %>%
group_by(GAME_ID) %>%
mutate(MATCHUP = max(MATCHUP)) %>%
ungroup() %>%
distinct(GAME_ID, .keep_all = TRUE) %>%
group_by(MATCHUP) %>%
arrange(MATCHUP,GAME_DATE) %>%
mutate(game_number = paste0("Game ", row_number())) %>%
ungroup() %>%
arrange(MATCHUP) %>%
mutate(version = format(Sys.time(), "%a %b %d %X"))
saveRDS(gamelog, "gamelog.rds")
